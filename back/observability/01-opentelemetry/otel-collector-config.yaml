apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: go-service-obs
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: 'go-microservice'
            kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                - go-service-obs
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            scrape_interval: 15s
            metrics_path: /metrics

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      resource:
        attributes:
        - key: service.name
          from_attribute: service.name
          action: upsert
        - key: service.version
          from_attribute: service.version
          action: upsert
        - key: k8s.namespace.name
          value: go-service-obs
          action: upsert
      memory_limiter:
        limit_mib: 256
        check_interval: 1s

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: "otel"
        const_labels:
          cluster: "local"
      otlp/jaeger:
        endpoint: jaeger-collector.go-service-obs.svc.cluster.local:4317
        tls:
          insecure: true
      loki:
        endpoint: http://loki.go-service-obs.svc.cluster.local:3100/loki/api/v1/push
      logging:
        loglevel: info

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133

    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, resource]
          exporters: [otlp/jaeger]
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, batch, resource]
          exporters: [prometheus]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch, resource]
          exporters: [loki, logging]
      telemetry:
        logs:
          level: "info"